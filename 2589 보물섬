#include <bits/stdc++.h>
#define MAX 50
struct tuple_{
    int x,y;
    int count_;
};
tuple_ q[MAX*MAX+5]; ///50*50
tuple_ save;
char A[MAX+5][MAX+5];
int M[MAX+5][MAX+5];
int n,e;
void input(){
    int i,j;
    //freopen("in.txt","r",stdin);
    scanf("%d %d",&n,&e);
    for(i=0;i<n;i++){
        scanf("%s",A[i]);
    }
    /*
    for(i=0;i<n;i++){
        printf("%s\n",A[i]);
    }
    */
}
int bfs(int xx, int yy){
    int f=0;
    int r=0;
    int i,j;
    int vt[MAX+5][MAX+5]={0,};
    vt[xx][yy]=1;
    q[r].x=xx;
    q[r].y=yy;
    q[r].count_=0; ///최단 거리
    r++;
    do{
        save = q[f++];
        if(vt[save.x+1][save.y]==0 && A[save.x+1][save.y]=='L'){ ///오른쪽
            q[r].x = save.x+1;
            q[r].y = save.y;
            q[r].count_ = save.count_+1;
            r++;
            vt[save.x+1][save.y]=1;
        }
        if(vt[save.x-1][save.y]==0 && A[save.x-1][save.y]=='L'){ ///왼쪽
            q[r].x = save.x-1;
            q[r].y = save.y;
            q[r].count_ = save.count_+1;
            r++;
            vt[save.x-1][save.y]=1;
        }
        if(vt[save.x][save.y+1]==0 && A[save.x][save.y+1]=='L'){ ///위
            q[r].x = save.x;
            q[r].y = save.y+1;
            q[r].count_ = save.count_+1;
            r++;
            vt[save.x][save.y+1]=1;
        }
        if(vt[save.x][save.y-1]==0 && A[save.x][save.y-1]=='L'){ ///아래
            q[r].x = save.x;
            q[r].y = save.y-1;
            q[r].count_ = save.count_+1;
            r++;
            vt[save.x][save.y-1]=1;
        }
    }while(f!=r);

    return q[r-1].count_;
}
void bfs_print(){
    int i,j;
    int s;
    int max_=0;

    for(i=0;i<n;i++){
        for(j=0;j<e;j++){
            if(A[i][j]=='W'){
                M[i][j]=0;
            }else if(A[i][j]=='L'){
                M[i][j]=1;
            }
        }
    }

    for(i=0;i<n;i++){
        for(j=0;j<e;j++){
            if(M[i][j]==1){
                s=bfs(i,j);
                if(s>max_){
                    max_=s;
                }
            }
        }
    }
    
    /*
    for(i=0;i<n;i++){
        for(j=0;j<e;j++){
            if(A[i][j]=='L'){
                s=bfs(i,j);
                //printf("(%d,%d) : %d\n",i,j,s); ///check
                if(s>max_){
                    max_=s;
                }
            }
        }
    }
    */
    
    printf("%d \n",max_);
}
int main(){
    input();
    bfs_print();
    return 0;
}
